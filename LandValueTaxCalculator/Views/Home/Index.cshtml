@model LandValueTaxCalculator.Models.ViewModels.SearchViewModel
@{
    ViewData["Title"] = "Land Value Tax Calculator";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header">
                    <h4 class="mb-0"><i class="fas fa-search me-2"></i>UK Overseas Property Ownership Analysis</h4>
                </div>
                <div class="card-body">
                    <p class="text-muted">
                        Select a region to view properties owned by overseas companies and calculate potential land value tax revenue.
                        The calculator uses a 1% annual tax rate on estimated land value (70% of property value).
                    </p>
                    
                    <form method="post" class="row g-3">
                        <div class="col-md-8">
                            <label for="selectedRegion" class="form-label">Select Region:</label>
                            <select name="selectedRegion" class="form-select" required>
                                <option value="">Choose a region...</option>
                                @foreach (var region in Model.AvailableRegions)
                                {
                                    <option value="@region" selected="@(region == Model.SelectedRegion)">
                                        @region
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">&nbsp;</label>
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="fas fa-calculator me-2"></i>Calculate Tax
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Summary != null)
    {
        <div class="row">
            <!-- Summary Cards -->
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card summary-card">
                    <div class="card-body text-center">
                        <h5 class="card-title">Properties Found</h5>
                        <h2 class="display-4">@Model.Summary.PropertyCount</h2>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">Total Value</h5>
                        <h3 class="value-highlight">£@Model.Summary.TotalValue.ToString("N0")</h3>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">Annual Tax (1%)</h5>
                        <h3 class="tax-highlight">£@Model.Summary.TotalPotentialTax.ToString("N0")</h3>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        <h5 class="card-title">Avg. per Property</h5>
                        <h4>£@((Model.Summary.PropertyCount > 0 ? Model.Summary.TotalPotentialTax / Model.Summary.PropertyCount : 0).ToString("N0"))</h4>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Map -->
            <div class="col-lg-8 mb-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-map-marker-alt me-2"></i>Property Locations in @Model.Summary.Region</h5>
                    </div>
                    <div class="card-body">
                        <div id="map"></div>
                    </div>
                </div>
            </div>

            <!-- Property Details -->
            <div class="col-lg-4 mb-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-building me-2"></i>Property Details</h5>
                    </div>
                    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
                        @for (int i = 0; i < Model.Summary.Properties.Count; i++)
                        {
                            var property = Model.Summary.Properties[i];
                            var tax = Model.Summary.TaxCalculations[i];
                            
                            <div class="property-item card mb-2" id="property-@i">
                                <div class="card-body p-3">
                                    <h6 class="card-title">@property.Address</h6>
                                    <small class="text-muted">@property.PostCode</small>
                                    <div class="mt-2">
                                        <strong>Owner:</strong> @property.OwnerCompany<br>
                                        <small class="text-muted">@property.OwnerCountry</small>
                                    </div>
                                    <div class="row mt-2">
                                        <div class="col-6">
                                            <small><strong>Value:</strong><br>£@property.EstimatedValue.ToString("N0")</small>
                                        </div>
                                        <div class="col-6">
                                            <small><strong>Annual Tax:</strong><br><span class="tax-highlight">£@tax.AnnualTax.ToString("N0")</span></small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Detailed Tax Breakdown -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-table me-2"></i>Tax Calculation Breakdown</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Property</th>
                                        <th>Owner</th>
                                        <th>Country</th>
                                        <th>Property Value</th>
                                        <th>Land Value (70%)</th>
                                        <th>Annual Tax (1%)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.Summary.Properties.Count; i++)
                                    {
                                        var property = Model.Summary.Properties[i];
                                        var tax = Model.Summary.TaxCalculations[i];
                                        
                                        <tr data-property-index="@i" class="property-row">
                                            <td>
                                                <strong>@property.Address</strong><br>
                                                <small class="text-muted">@property.PostCode</small>
                                            </td>
                                            <td>@property.OwnerCompany</td>
                                            <td>
                                                <span class="badge bg-secondary">@property.OwnerCountry</span>
                                            </td>
                                            <td class="value-highlight">£@property.EstimatedValue.ToString("N0")</td>
                                            <td>£@tax.LandValuePortion.ToString("N0")</td>
                                            <td class="tax-highlight"><strong>£@tax.AnnualTax.ToString("N0")</strong></td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr class="table-info">
                                        <th colspan="3">TOTAL</th>
                                        <th class="value-highlight">£@Model.Summary.TotalValue.ToString("N0")</th>
                                        <th>£@Model.Summary.TaxCalculations.Sum(tc => tc.LandValuePortion).ToString("N0")</th>
                                        <th class="tax-highlight"><strong>£@Model.Summary.TotalPotentialTax.ToString("N0")</strong></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @if (Model.Summary != null)
    {
        <script>
            // Initialize map
            var map = L.map('map').setView([@Model.Summary.CenterLatitude, @Model.Summary.CenterLongitude], 
                @(Model.Summary.Region.Equals("GREATER LONDON", StringComparison.OrdinalIgnoreCase) ? "11" : "10"));

            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);

            // Add property markers
            var properties = @Html.Raw(Json.Serialize(Model.Summary.Properties));
            var taxCalculations = @Html.Raw(Json.Serialize(Model.Summary.TaxCalculations));
            
            properties.forEach(function(property, index) {
                var tax = taxCalculations[index];
                
                var marker = L.marker([property.latitude, property.longitude])
                    .addTo(map)
                    .bindPopup(`
                        <div style="min-width: 200px;">
                            <h6>${property.address}</h6>
                            <p><strong>Owner:</strong> ${property.ownerCompany}<br>
                            <strong>Country:</strong> ${property.ownerCountry}</p>
                            <p><strong>Property Value:</strong> £${property.estimatedValue.toLocaleString()}<br>
                            <strong>Annual Tax:</strong> <span style="color: #e74c3c; font-weight: bold;">£${tax.annualTax.toLocaleString()}</span></p>
                        </div>
                    `);
                
                // Add click event to highlight corresponding table row and property item
                marker.on('click', function() {
                    $('.property-row').removeClass('table-warning');
                    $(`tr[data-property-index="${index}"]`).addClass('table-warning');
                    $('.property-item').removeClass('border-primary');
                    $(`#property-${index}`).addClass('border-primary');
                    document.getElementById(`property-${index}`).scrollIntoView({ 
                        behavior: 'smooth', 
                        block: 'center' 
                    });
                });
            });

            // Add click events to property items to center map on marker
            $('.property-item').click(function() {
                var index = $(this).attr('id').split('-')[1];
                var property = properties[index];
                map.setView([property.latitude, property.longitude], 15);
                $('.property-item').removeClass('border-primary');
                $(this).addClass('border-primary');
            });

            // Add hover effects to table rows
            $('.property-row').hover(
                function() {
                    var index = $(this).attr('data-property-index');
                    $(`#property-${index}`).addClass('border-info');
                },
                function() {
                    var index = $(this).attr('data-property-index');
                    $(`#property-${index}`).removeClass('border-info');
                }
            );
        </script>
    }
}
